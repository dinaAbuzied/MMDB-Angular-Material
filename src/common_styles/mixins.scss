@mixin rotate($property) {
    -webkit-transform: rotate($property);
    -ms-transform: rotate($property);
    transform: rotate($property);
}

@mixin box-shadow($left, $top, $radius, $color) {
    box-shadow: $left $top $radius $color;
    -webkit-box-shadow: $left $top $radius $color;
    -moz-box-shadow: $left $top $radius $color;
}

@mixin square($value) {
    width: $value;
    height: $value;
}

@mixin attr-class ($property) {
    .#{$property},
    [#{$property}] {
        @content;
    }
}

@mixin hover-focus {
    &:not([disabled]):hover,
    &:not([disabled]):focus {
        @content;
    }
}

// div {
//     @include responsive-ratio(16,9);
// }
@mixin responsive-ratio($x, $y, $pseudo: false) {
    $padding: unquote( ( $y / $x) * 100 + '%');
    @if $pseudo {
        &:before {
            @include pseudo($pos: relative);
            width: 100%;
            padding-top: $padding;
        }
    }
    @else {
        padding-top: $padding;
    }
}

@mixin pseudo($display: block, $pos: absolute, $content: '') {
    content: $content;
    display: $display;
    position: $pos;
}

@mixin triangle($direction, $size, $color, $position: absolute) {
    @include pseudo($pos: $position);
    @include square(0);
    border-style: solid;
    @if $direction==top {
        border-width: 0 ($size / 2) $size ($size / 2);
        border-color: transparent transparent $color transparent;
    }
    @else if $direction==right {
        border-width: ($size / 2) 0 ($size / 2) $size;
        border-color: transparent transparent transparent $color;
    }
    @else if $direction==bottom {
        border-width: $size ($size / 2) 0 ($size / 2);
        border-color: $color transparent transparent transparent;
    }
    @else {
        border-width: ($size / 2) $size ($size / 2) 0;
        border-color: transparent $color transparent transparent;
    }
}

@mixin font-setting($size: false, $colour: false, $weight: false, $style: false, $align: false, $lh: false) {
    @if $size {
        font-size: $size;
    }
    @if $colour {
        color: $colour;
    }
    @if $weight {
        font-weight: $weight;
    }
    @if $style {
        font-style: $style;
    }
    @if $align {
        text-align: $align;
    }
    @if $lh {
        line-height: $lh;
    }
}

@mixin truncate($truncation-boundary) {
    max-width: $truncation-boundary;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

@mixin abs-position ($top: false, $right: false, $bottom: false, $left: false) {
    position: absolute;
    @if $top {
        top: $top;
    }
    @if $right {
        right: $right;
    }
    @if $bottom {
        bottom: $bottom;
    }
    @if $left {
        left: $left;
    }
}

@mixin centerer($horizontal: true, $vertical: true) {
    @if ($horizontal and $vertical) {
        @include abs-position(50%, false, false, 50%);
        transform: translate(-50%, -50%);
    }
    @else if ($horizontal) {
        @include abs-position(false, false, false, 50%);
        left: 50%;
        transform: translate(-50%, 0);
    }
    @else if ($vertical) {
        @include abs-position(50%);
        transform: translate(0, -50%);
    }
}